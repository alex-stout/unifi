name: Build 6.3 Beta

on:
  push:
    branches:
      - main
    paths:
      - 6.3/beta/**
      - .github/workflows/build-6.3-beta.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up dynamic build ARGs
        id: getargs
        run: echo "::set-output name=version::$(cat ./6.3/beta/VERSION)"
      -
        name: Set up Docker metadata for Alpine
        id: meta-alpine
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,6.3-alpine-beta
            type=raw,6.3-alpine
          labels: |
            org.opencontainers.image.vendor=The Goofball - goofball222@gmail.com
            org.opencontainers.image.title=UniFi Controller
            org.opencontainers.image.description=UniFi Controller
            org.opencontainers.image.version=${{ steps.getargs.outputs.version }}-Alpine
      -
        name: Set up Docker metadata for Debian
        id: meta-debian
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,6.3-beta
            type=raw,6.3
          labels: |
            org.opencontainers.image.vendor=The Goofball - goofball222@gmail.com
            org.opencontainers.image.title=UniFi Controller
            org.opencontainers.image.description=UniFi Controller
            org.opencontainers.image.version=${{ steps.getargs.outputs.version }}-Debian
      -
        name: Set up Docker metadata for Ubuntu
        id: meta-ubuntu
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,6.3-ubuntu-beta
            type=raw,6.3-ubuntu
          labels: |
            org.opencontainers.image.vendor=The Goofball - goofball222@gmail.com
            org.opencontainers.image.title=UniFi Controller
            org.opencontainers.image.description=UniFi Controller
            org.opencontainers.image.version=${{ steps.getargs.outputs.version }}-Ubuntu
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push Alpine Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./6.3/beta
          file: ./6.3/beta/Dockerfile.alpine
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}
          build-args: VERSION=${{ steps.getargs.outputs.version }}
      -
        name: Build and push Debian Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./6.3/beta
          file: ./6.3/beta/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-debian.outputs.tags }}
          labels: ${{ steps.meta-debian.outputs.labels }}
          build-args: VERSION=${{ steps.getargs.outputs.version }}
      -
        name: Build and push Ubuntu Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./6.3/beta
          file: ./6.3/beta/Dockerfile.ubuntu
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-ubuntu.outputs.tags }}
          labels: ${{ steps.meta-ubuntu.outputs.labels }}
          build-args: VERSION=${{ steps.getargs.outputs.version }}
